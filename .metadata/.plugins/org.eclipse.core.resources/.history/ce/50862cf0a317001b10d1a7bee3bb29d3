package list;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Main {

	public static void main(String[] args) {
		//List só aceita tipos wrapper, não aceita tipos primitivos
		/*ArrayList é o tipo que tem melhor otimização
		 *tendo em si o melhor do List e do Vetor
		 *Outra observação é que o List não pode ser instanciado, sendo necessário declarar o tipo 
		 */
		List <String> list = new ArrayList<>();
		
		list.add("bob");
		list.add("alex");
		list.add("Anna");
		list.add("Maria");
		list.add(2, "Marcos");
		
	
		System.out.println(list.size());
		for(String x : list) {
			System.out.println(x);
		}
		
		System.out.println("----------------");
		//remove da lista por posição ou char
		list.remove(1);
		//função lambda ou predicado
		list.removeIf(x -> x.charAt(0) == 'M');
		System.out.println(list.size());
		for(String x : list) {
			System.out.println(x);
		}
		
		System.out.println("----------------");
		//localiza a posição na lista
		System.out.println("Index of Bob: " + list.indexOf("bob"));
		
		System.out.println("----------------");
		//filtrar a lista
		//necessario declarar nova lista
		List<String> result = list.stream().filter(x -> x.charAt(0) == 'A').collect(Collectors.toList());
		
		
		
		
	}

}
